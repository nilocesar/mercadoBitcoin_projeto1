@property --rotate {
  syntax: "<angle>";
  initial-value: 132deg;
  inherits: false;
}
:root {
  --card-height: 65vh;
  --card-width: calc(var(--card-height) / 1.5);
}
body {
  --a: "0deg";
  --xAngle: "0deg";
  --yAngle: "0deg";
  perspective: 30cm;
}
body:hover .triangImg,
body:hover .cityContainer {
  transition-duration: 0s;
}
.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.container::before {
  position: absolute;
  content: "";
  width: 104%;
  height: 102%;
  border-radius: 8px;
  background-image: linear-gradient(var(--rotate), #5ddcff, #3c67e3 43%, #4e00c2);
  z-index: -1;
  top: -1%;
  left: -2%;
  -webkit-animation: spin 2.5s linear infinite;
          animation: spin 2.5s linear infinite;
  opacity: 0.2;
}
.container::after {
  position: absolute;
  content: "";
  top: calc(var(--card-height) / 6);
  left: 0;
  right: 0;
  z-index: -1;
  height: 100%;
  width: 100%;
  margin: 0 auto;
  transform: scale(0.8);
  filter: blur(calc(var(--card-height) / 6));
  background-image: linear-gradient(var(--rotate), #5ddcff, #3c67e3 43%, #4e00c2);
  opacity: 0.1;
  transition: opacity 0.5s;
  -webkit-animation: spin 2.5s linear infinite;
          animation: spin 2.5s linear infinite;
}
@-webkit-keyframes spin {
  0% {
    --rotate: 0deg;
  }
  100% {
    --rotate: 360deg;
  }
}
@keyframes spin {
  0% {
    --rotate: 0deg;
  }
  100% {
    --rotate: 360deg;
  }
}
.container .bg {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-image: url(../../assets/img/bg02.png);
  background-repeat: no-repeat;
  background-size: cover;
  opacity: 0.3;
}
.container #particles-js {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
.container #particles-js canvas {
  position: relative;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
.container .triangulo {
  position: relative;
  width: 25em;
  height: 25em;
  /* BLINK FAST */
}
.container .triangulo .triangImg {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url(../../assets/img/triangulo2.svg);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
}
.container .triangulo .block {
  position: absolute;
  width: 95%;
  height: 14em;
  top: 40%;
  left: 60%;
  margin-top: -7.5em;
  margin-left: -50%;
  border-radius: 0.5em;
  background: transparent;
  background: rgba(255, 255, 255, 0.03);
  -webkit-backdrop-filter: blur(20px);
          backdrop-filter: blur(20px);
  z-index: 3;
}
.container .triangulo .cityContainer {
  position: absolute;
  width: 42.2em;
  height: 27em;
  left: 50%;
  top: -2em;
  margin-left: -20em;
  z-index: 13;
  transform: rotateX(var(--xAngle)) rotateY(var(--yAngle)) translate3d(0, 0, 3cm);
  transform-style: preserve-3d;
}
.container .triangulo .cityContainer video {
  position: relative;
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
}
.container .triangulo .btnInt {
  position: absolute;
  width: 4em;
  height: 4em;
  left: 51%;
  top: -0.5em;
  cursor: pointer;
  z-index: 13;
  transform: rotateX(var(--xAngle)) rotateY(var(--yAngle)) translate3d(0, 0, 6cm);
  transform-style: preserve-3d;
}
.container .triangulo .btnInt .icoB {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url(../../assets/img/btn1.svg);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
}
.container .triangulo .btnInt:hover .conT {
  display: flex;
}
.container .triangulo .btnInt .conT {
  position: relative;
  width: 20em;
  height: 100%;
  display: none;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  left: -9em;
}
.container .triangulo .btnInt .conT .line {
  position: relative;
  width: 5em;
  border-top: 0.3em solid #FFA700;
  filter: drop-shadow(0px 0px 6px #ffa700);
}
.container .triangulo .btnInt .conT p {
  position: relative;
  color: #FFA700;
  margin-right: 0.5em;
  font-weight: bold;
}
.container .triangulo .triangImg,
.container .triangulo .cityContainer,
.container .triangulo .btnInt {
  transition: transform 0.3s linear 0s;
}
.container .triangulo .highFreq {
  -webkit-animation: blinkFast 0.0009s infinite alternate;
          animation: blinkFast 0.0009s infinite alternate;
}
@-webkit-keyframes blinkFast {
  70% {
    opacity: 0.7;
  }
}
@keyframes blinkFast {
  70% {
    opacity: 0.7;
  }
}
.container .triangulo .flicker {
  color: rgba(255, 255, 255, 0);
  text-shadow: 2px 2px 1px #fff, 0 0 20px #fff, 0 0 10px #fff, 0 0 50px #fff;
  -webkit-animation: flickerer 3s infinite alternate;
          animation: flickerer 3s infinite alternate;
}
@-webkit-keyframes flickerer {
  40% {
    opacity: 0.8;
  }
  42% {
    opacity: 0.1;
  }
  43% {
    opacity: 0.8;
  }
  45% {
    opacity: 0.1;
  }
  46% {
    opacity: 0.8;
  }
}
@keyframes flickerer {
  40% {
    opacity: 0.8;
  }
  42% {
    opacity: 0.1;
  }
  43% {
    opacity: 0.8;
  }
  45% {
    opacity: 0.1;
  }
  46% {
    opacity: 0.8;
  }
}
.container .triangulo .highFreqStatic {
  position: absolute;
  width: 200%;
  left: 50%;
  top: 25%;
  margin-left: -100%;
  font-weight: 1000;
  font-size: 3.5em;
  line-height: 1;
  text-align: center;
  color: rgba(255, 255, 255, 0);
  text-shadow: -1px -1px 1px #fff, 2px 2px 1px #fff;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
